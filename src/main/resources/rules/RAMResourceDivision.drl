//created on: 2012. 10. 15
package com.kt.oss.wmIntgl.datamapper.service.rules.mapper

import com.kt.oss.wmIntgl.common.constants.ScenarioType;
import com.kt.oss.wmIntgl.common.utils.StringUtil;
import com.kt.oss.wmIntgl.datahandler.domain.WMResourceInfo;
import com.kt.oss.wmIntgl.datahandler.domain.WMWorkTeam;
import com.kt.oss.wmIntgl.datahandler.domain.IntglDataVo;
import com.kt.oss.wmIntgl.datamapper.service.rules.core.RulesVo;
import com._360scheduling.schema.dsmodelling.DsModelling.RAMResourceDivision;

// vstype == 14 이고 int == 0 이면
// ram_division_id : [officeScodes] 매핑
// ram_resource_id : [workerId] 매핑
// within_region_multiplier : 쿼리 결과의 [WITHIN_REGION_MULTIPLIER] 매핑
//                            360 mirror DB 에서 해당작업자의 Devision 정보를 조회하여 해당 정보가 존재 할 경우 Element에 매핑한다.
rule "VS14_RAMResourceDivision1"
	dialect "java"
	no-loop
	when
		i : Integer(intValue() == 0)
		order : WMResourceInfo()
		intglVo : IntglDataVo(vsType == ScenarioType.VS14)
		rulesVo : RulesVo()
		ramResourceDivision : RAMResourceDivision()
	then
		ramResourceDivision.setRamDivisionId(order.getOfficeScodes());
		ramResourceDivision.setRamResourceId(order.getWorkerId());
		ramResourceDivision.setWithinRegionMultiplier(rulesVo.getWithinRegionMultiplier());
        update(ramResourceDivision);
end

// vstype == 14 이고 int == 1 이면
// ram_division_id : [officeScodes] 매핑
// ram_resource_id : [workerId] 매핑
// within_region_multiplier : 쿼리 결과의 [WITHIN_REGION_MULTIPLIER] 매핑
//                            360 mirror DB 에서 해당작업자의 Devision 정보를 조회하여 해당 정보가 존재 할 경우 Element에 매핑한다.
rule "VS14_RAMResourceDivision2"
	dialect "java"
	no-loop
	when
		i : Integer(intValue() == 1)
		order : WMResourceInfo()
		workTeam : WMWorkTeam()
		intglVo : IntglDataVo(vsType == ScenarioType.VS14)
		rulesVo : RulesVo()
		ramResourceDivision : RAMResourceDivision()
	then
		ramResourceDivision.setRamDivisionId(workTeam.getOfficeScode() + "_" + workTeam.getWorkTeamCode());
		ramResourceDivision.setRamResourceId(order.getWorkerId());
		ramResourceDivision.setWithinRegionMultiplier(rulesVo.getWithinRegionMultiplier());
        update(ramResourceDivision);
end

// vstype == 14D 이고 int == 0 이면
// ram_division_id : [officeScodes] 매핑
// ram_resource_id : [workerId] 매핑
rule "VS14D_RAMResourceDivision1"
	dialect "java"
	no-loop
	when
		i : Integer(intValue() == 0)
		order : WMResourceInfo()
		intglVo : IntglDataVo(vsType == ScenarioType.VS14D)
		ramResourceDivision : RAMResourceDivision()
	then
		ramResourceDivision.setRamDivisionId(order.getOfficeScodes());
		ramResourceDivision.setRamResourceId(order.getWorkerId());
        update(ramResourceDivision);
end

// vstype == 14D 이고 int == 1 이면
// ram_division_id : [officeScodes] 매핑
// ram_resource_id : [workerId] 매핑
rule "VS14D_RAMResourceDivision2"
	dialect "java"
	no-loop
	when
		i : Integer(intValue() == 1)
		order : WMResourceInfo()
		workTeam : WMWorkTeam()
		intglVo : IntglDataVo(vsType == ScenarioType.VS14D)
		ramResourceDivision : RAMResourceDivision()
	then
		ramResourceDivision.setRamDivisionId(workTeam.getOfficeScode() + "_" + workTeam.getWorkTeamCode());
		ramResourceDivision.setRamResourceId(order.getWorkerId());
        update(ramResourceDivision);
end
