//created on: 2012. 10. 15
package com.kt.oss.wmIntgl.datamapper.service.rules.mapper

import java.util.Map;
import com.kt.oss.wmIntgl.common.constants.ScenarioType;
import com.kt.oss.wmIntgl.common.utils.StringUtil;
import com.kt.oss.wmIntgl.datahandler.domain.IntglDataVo;
import com.kt.oss.wmIntgl.datahandler.domain.WMAppointmentOrder;
import com.kt.oss.wmIntgl.datahandler.domain.WMWorkOrder;
import com.kt.oss.wmIntgl.datamapper.service.OllehMapService;
import com._360scheduling.schema.dsscheduledata.DsScheduleData.Location;

// vstype == 1 이면
// id : [dongCode] + [addNoType] + [addrNo] + [addrHo] + [officeScode] + [workTeamCode] + [ trim(right(addrEtc, 5)) ] ->officeScode에서 첫자리 'R' 제거 ->addrEtc가 5자 미안일 경우 trim해서 그대로 매핑
// location_type_id : Default 값으로 'default' 설정
// address_line1 : left(addr, 64) 매핑
// address_line2 : Default 값으로 null 설정(태그생성안함)
// latitude : [addr] 정보를 이용하여 OllehMap에서 위도 조회 후 설정
// longitude : [addr] 정보를 이용하여 OllehMap에서 경도 조회 후 설정
// locality : if [concurrentSeq] <> (null or '' ) then [officeScode] + ""-"" + [concurrentSeq] 매핑 else null end if
rule "VS1_Location"
	dialect "java"
	no-loop
	when
		order : WMWorkOrder()
		intglVo : IntglDataVo(vsType == ScenarioType.VS1)
		ollehMapService : OllehMapService()
		location : Location()
		coords : Map()
	then
		coords = ollehMapService.getCoord(order.getAddr(), intglVo, order.getOfficeScode(), order.getDongCode());
		location.setId((order.getDongCode() + order.getAddrNoType() + order.getAddrNo() + order.getAddrHo() + order.getOfficeScode().substring(1) + order.getWorkTeamCode() + StringUtil.rightstring(order.getAddrEtc(), 5, false)).replaceAll(" ", ""));
		location.setLocationTypeId("default");
		location.setAddressLine1(StringUtil.leftstring(order.getAddr(), 64));
		//location.setAddressLine2(StringUtil.leftstring(order.getAddrEtc(), 64));
		location.setLatitude(Double.parseDouble(coords.get("X").toString()));
		location.setLongitude(Double.parseDouble(coords.get("Y").toString()));
		location.setLocality((StringUtil.isNotEmpty(order.getConcurrentSeq()))? order.getOfficeScode() + "-" + order.getConcurrentSeq() : null);
        update(location);
end

// vstype == 5 이면
// id : [dongCode] + [addNoType] + [addrNo] + [addrHo] + [officeScode] + [workTeamCode] + [ trim(right(addrEtc, 5)) ] ->officeScode에서 첫자리 'R' 제거 ->addrEtc가 5자 미안일 경우 trim해서 그대로 매핑
// location_type_id : Default 값으로 'default' 설정
// address_line1 : left(addr, 64) 매핑
// address_line2 : Default 값으로 null 설정(태그생성안함)
// latitude : [addr] 정보를 이용하여 OllehMap에서 위도 조회 후 설정
// longitude : [addr] 정보를 이용하여 OllehMap에서 경도 조회 후 설정
// locality : if [concurrentSeq] <> (null or '' ) then [officeScode] + ""-"" + [concurrentSeq] 매핑 else null end if
rule "VS5_Location"
	dialect "java"
	no-loop
	when
		order : WMWorkOrder()
		intglVo : IntglDataVo(vsType == ScenarioType.VS5)
		ollehMapService : OllehMapService()
		location : Location()
		coords : Map()
	then
		coords = ollehMapService.getCoord(order.getAddr(), intglVo, order.getOfficeScode(), order.getDongCode());
		location.setId((order.getDongCode() + order.getAddrNoType() + order.getAddrNo() + order.getAddrHo() + order.getOfficeScode().substring(1) + order.getWorkTeamCode() + StringUtil.rightstring(order.getAddrEtc(), 5, false)).replaceAll(" ", ""));
		location.setLocationTypeId("default");
		location.setAddressLine1(StringUtil.leftstring(order.getAddr(), 64));
		//location.setAddressLine2(StringUtil.leftstring(order.getAddrEtc(), 64));
		location.setLatitude(Double.parseDouble(coords.get("X").toString()));
		location.setLongitude(Double.parseDouble(coords.get("Y").toString()));
		location.setLocality((StringUtil.isNotEmpty(order.getConcurrentSeq()))? order.getOfficeScode() + "-" + order.getConcurrentSeq() : null);
        update(location);
end

// vstype == 6 이면
// id : [dongCode] + [addNoType] + [addrNo] + [addrHo] + [officeScode] + [workTeamCode] + [ trim(right(addrEtc, 5)) ] ->officeScode에서 첫자리 'R' 제거 ->addrEtc가 5자 미안일 경우 trim해서 그대로 매핑
// location_type_id : Default 값으로 'default' 설정
// address_line1 : left(addr, 64) 매핑
// address_line2 : left(addrEtc, 64) 매핑
// latitude : [addr] 정보를 이용하여 OllehMap에서 위도 조회 후 설정
// longitude : [addr] 정보를 이용하여 OllehMap에서 경도 조회 후 설정
// locality : [concurrentSeq] 매핑
rule "VS6_Location"
	dialect "java"
	no-loop
	when
		order : WMAppointmentOrder()
		intglVo : IntglDataVo(vsType == ScenarioType.VS6)
		ollehMapService : OllehMapService()
		location : Location()
		coords : Map()
	then
		coords = ollehMapService.getCoord(order.getAddr(), intglVo, order.getOfficeScode(), order.getDongCode());
		location.setId((order.getDongCode() + order.getAddrNoType() + order.getAddrNo() + order.getAddrHo() + order.getOfficeScode().substring(1) + order.getWorkTeamCode() + StringUtil.rightstring(order.getAddrEtc(), 5, false)).replaceAll(" ", ""));
		location.setLocationTypeId("default");
		location.setAddressLine1(StringUtil.leftstring(order.getAddr(), 64));
		location.setAddressLine2(StringUtil.leftstring(order.getAddrEtc(), 64));
		location.setLatitude(Double.parseDouble(coords.get("X").toString()));
		location.setLongitude(Double.parseDouble(coords.get("Y").toString()));
		location.setLocality(order.getConcurrentSeq());
        update(location);
end

// vstype == 6C 이면
// id : [dongCode] + [addNoType] + [addrNo] + [addrHo] + [officeScode] + [workTeamCode] + [ trim(right(addrEtc, 5)) ] ->officeScode에서 첫자리 'R' 제거 ->addrEtc가 5자 미안일 경우 trim해서 그대로 매핑
// location_type_id : Default 값으로 'default' 설정
// address_line1 : left(addr, 64) 매핑
// address_line2 : left(addrEtc, 64) 매핑
// latitude : [addr] 정보를 이용하여 OllehMap에서 위도 조회 후 설정
// longitude : [addr] 정보를 이용하여 OllehMap에서 경도 조회 후 설정
// locality : if [concurrentSeq] <> (null or '' ) then [officeScode] + ""-"" + [concurrentSeq] 매핑 else null end if
rule "VS6C_Location"
	dialect "java"
	no-loop
	when
		order : WMAppointmentOrder()
		intglVo : IntglDataVo(vsType == ScenarioType.VS6C)
		ollehMapService : OllehMapService()
		location : Location()
		coords : Map()
	then
		coords = ollehMapService.getCoord(order.getAddr(), intglVo, order.getOfficeScode(), order.getDongCode());
		location.setId((order.getDongCode() + order.getAddrNoType() + order.getAddrNo() + order.getAddrHo() + order.getOfficeScode().substring(1) + order.getWorkTeamCode() + StringUtil.rightstring(order.getAddrEtc(), 5, false)).replaceAll(" ", ""));
		location.setLocationTypeId("default");
		location.setAddressLine1(StringUtil.leftstring(order.getAddr(), 64));
		location.setAddressLine2(StringUtil.leftstring(order.getAddrEtc(), 64));
		location.setLatitude(Double.parseDouble(coords.get("X").toString()));
		location.setLongitude(Double.parseDouble(coords.get("Y").toString()));
		location.setLocality((StringUtil.isNotEmpty(order.getConcurrentSeq()))? order.getOfficeScode() + "-" + order.getConcurrentSeq() : null);
        update(location);
end

// vstype == 10 이면
// id : [dongCode] + [addNoType] + [addrNo] + [addrHo] + [officeScode] + [workTeamCode] + [ trim(right(addrEtc, 5)) ] ->officeScode에서 첫자리 'R' 제거 ->addrEtc가 5자 미안일 경우 trim해서 그대로 매핑
// location_type_id : Default 값으로 'default' 설정
// address_line1 : left(addr, 64) 매핑
// address_line2 : Default 값으로 null 설정(태그생성안함)
// latitude : [addr] 정보를 이용하여 OllehMap에서 위도 조회 후 설정
// longitude : [addr] 정보를 이용하여 OllehMap에서 경도 조회 후 설정
// locality : if [concurrentSeq] <> (null or '' ) then [officeScode] + ""-"" + [concurrentSeq] 매핑 else null end if
rule "VS10_Location"
	dialect "java"
	no-loop
	when
		order : WMWorkOrder()
		intglVo : IntglDataVo(vsType == ScenarioType.VS10)
		ollehMapService : OllehMapService()
		location : Location()
		coords : Map()
	then
		coords = ollehMapService.getCoord(order.getAddr(), intglVo, order.getOfficeScode(), order.getDongCode());
		location.setId((order.getDongCode() + order.getAddrNoType() + order.getAddrNo() + order.getAddrHo() + order.getOfficeScode().substring(1) + order.getWorkTeamCode() + StringUtil.rightstring(order.getAddrEtc(), 5, false)).replaceAll(" ", ""));
		location.setLocationTypeId("default");
		location.setAddressLine1(StringUtil.leftstring(order.getAddr(), 64));
		//location.setAddressLine2(StringUtil.leftstring(order.getAddrEtc(), 64));
		location.setLatitude(Double.parseDouble(coords.get("X").toString()));
		location.setLongitude(Double.parseDouble(coords.get("Y").toString()));
		location.setLocality((StringUtil.isNotEmpty(order.getConcurrentSeq()))? order.getOfficeScode() + "-" + order.getConcurrentSeq() : null);
        update(location);
end
