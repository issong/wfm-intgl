//created on: 2012. 10. 15
package com.kt.oss.wmIntgl.datamapper.service.rules.mapper

import com.kt.oss.wmIntgl.common.constants.ScenarioType;
import com.kt.oss.wmIntgl.common.utils.StringUtil;
import com._360scheduling.schema.dsscheduledata.DsScheduleData.ActivityStatus;
import com.kt.oss.wmIntgl.datahandler.domain.IntglDataVo;
import com.kt.oss.wmIntgl.datamapper.service.rules.core.RulesDB;
import com.kt.oss.wmIntgl.datamapper.domain.intgl.WorkOrderStateVo;
import com.kt.oss.wmIntgl.datahandler.domain.WMWorkOrderStatus;

// vstype == 7 이면..
// workType : substring( [activity_id], 1, 1) 매핑
// officeScode  : substring( [activity_id], 2, 7) 매핑
// workOdrNum  : substring( [activity_id], 8) 매핑
// odrNum  : Default '' 설정
// ttId  : Default '' 설정
// workProgState  : 
// workProcState  : 
// bt360AddWorkProgState  : 
//  : [status_id]를 조건으로 TB_WM_MAPPINGSTATUS 테이블을 조회하여 매핑
//  : WorkProgState = status_cd, WorkProcState = complete_cd, bt360AddWorkProgSate = additional_cd, where 절 조건 threesixtystatus_cd = [status_id]
// workStateDt  : [date_time_status] 매핑
// duration : Default '' 설정
// highlight : Default '' 설정
// reason : [reason] 매핑
// reasonValue : Default '' 설정
// bt360FixedOdrYn  : [fixed] 매핑
// bt360FixedWorkerId  : [resource_id] 매핑
// bt360FixedVisitDt  : [date_time_fixed] 매핑
// bt360LogOnOffState  : Default '' 설정
// bt360LogOnOffDt  : Default '' 설정
// bt360LogOnOffWorkerId  : Default '' 설정
rule "VS7_WMWorkOrderStatus"
	dialect "java"
	no-loop
	when
		order : ActivityStatus()
		intglVo : IntglDataVo(vsType == ScenarioType.VS7)
		rulesDB : RulesDB()
		workOrderStateVo : WorkOrderStateVo()
		wmWorkOrderStatus : WMWorkOrderStatus()
	then
		workOrderStateVo = rulesDB.selectWMWorkOrderState(order.getStatusId());
		wmWorkOrderStatus.setWorkType(StringUtil.leftstring(order.getActivityId(), 1));
		wmWorkOrderStatus.setOfficeScode(StringUtil.substring(order.getActivityId(), 1, 7));
		wmWorkOrderStatus.setWorkOdrNum(StringUtil.substring(order.getActivityId(), 7));
		wmWorkOrderStatus.setOdrNum("");
		wmWorkOrderStatus.setTtId("");
		wmWorkOrderStatus.setWorkProgState(workOrderStateVo.getStatusCd());
		wmWorkOrderStatus.setWorkProcState(workOrderStateVo.getCompleteCd());
		wmWorkOrderStatus.setBt360AddWorkProgState(workOrderStateVo.getAdditionalCd());
		wmWorkOrderStatus.setWorkStateDt(order.getDateTimeStatus());
		wmWorkOrderStatus.setDuration(StringUtil.isEmpty(order.getDuration())? null : String.valueOf((order.getDuration().getHours() * 60) + order.getDuration().getMinutes()));
		wmWorkOrderStatus.setHighlight("");
		wmWorkOrderStatus.setReason(order.getReason());
		wmWorkOrderStatus.setReasonValue("");
		wmWorkOrderStatus.setBt360FixedOdrYn(order.isFixed());
		wmWorkOrderStatus.setBt360FixedWorkerId(order.getResourceId());
		wmWorkOrderStatus.setBt360FixedVisitDt(order.getDateTimeFixed());
		wmWorkOrderStatus.setBt360LogOnOffState("");
		wmWorkOrderStatus.setBt360LogOnOffDt(null);
		wmWorkOrderStatus.setBt360LogOnOffWorkerId("");		
        update(wmWorkOrderStatus);
end
