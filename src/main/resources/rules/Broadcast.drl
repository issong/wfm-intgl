//created on: 2012. 10. 15
package com.kt.oss.wmIntgl.datamapper.service.rules.mapper

import com.kt.oss.wmIntgl.common.constants.ScenarioType;
import com.kt.oss.wmIntgl.common.utils.ConversionUtil;
import com.kt.oss.wmIntgl.datahandler.domain.IntglDataVo;
import com.kt.oss.wmIntgl.datamapper.service.rules.core.RulesVo;
import com._360scheduling.schema.dsscheduledata.DsScheduleData.Broadcast;

// vstype == 1 이고 int == 0 이면
// id : [sourceId] 매핑
// active : Default 값으로 true 설정
// broadcast_type_id : Default 값으로 'WEBSERVICE' 설정
// plan_type : Default 값으로 'CHANGE' 설정
// once_only : Default 값으로 false 설정
// allocation_type : Default 값으로 8 설정
rule "VS1_Broadcast1"
	dialect "java"
	no-loop
	when
		i : Integer(intValue() == 0)
		intglVo : IntglDataVo(vsType == ScenarioType.VS1)
		broadcast : Broadcast()
	then
		broadcast.setId(intglVo.getSourceId());
		broadcast.setActive(true);
		broadcast.setBroadcastTypeId("WEBSERVICE");
		broadcast.setPlanType("CHANGE");
		broadcast.setOnceOnly(false);
		broadcast.setAllocationType(8);
        update(broadcast);
end

// vstype == 1 이고 int == 1 이면
// id : [sourceId] + '_workbench' 매핑
// active : Default 값으로 true 설정
// broadcast_type_id : Default 값으로 'WORKBENCH' 설정
// plan_type : Default 값으로 'WORKBENCH' 설정
// once_only : Default 값으로 false 설정
// allocation_type : Default 값으로 1 설정
rule "VS1_Broadcast2"
	dialect "java"
	no-loop
	when
		i : Integer(intValue() == 1)
		intglVo : IntglDataVo(vsType == ScenarioType.VS1)
		broadcast : Broadcast()
	then
		broadcast.setId(intglVo.getSourceId() + "_workbench");
		broadcast.setActive(true);
		broadcast.setBroadcastTypeId("WEBSERVICE");
		broadcast.setPlanType("WORKBENCH");
		broadcast.setOnceOnly(false);
		broadcast.setAllocationType(1);
        update(broadcast);
end

// vstype == 1 이고 int == 2 이면
// id : [sourceId] + '_FILE' 매핑
// active : Default 값으로 true 설정
// broadcast_type_id : Default 값으로 'FILE' 설정
// plan_type : Default 값으로 'CHANGE' 설정
// once_only : Default 값으로 false 설정
// allocation_type : Default 값으로 8 설정
rule "VS1_Broadcast3"
	dialect "java"
	no-loop
	when
		i : Integer(intValue() == 2)
		intglVo : IntglDataVo(vsType == ScenarioType.VS1)
		broadcast : Broadcast()
	then
		broadcast.setId(intglVo.getSourceId() + "_FILE");
		broadcast.setActive(true);
		broadcast.setBroadcastTypeId("FILE");
		broadcast.setPlanType("CHANGE");
		broadcast.setOnceOnly(false);
		broadcast.setAllocationType(8);
        update(broadcast);
end

// vstype == 1 이고 int == 3 이면
// id : [sourceId] + '_DB' 매핑
// active : Default 값으로 true 설정
// broadcast_type_id : Default 값으로 'FILE' 설정
// plan_type : Default 값으로 'COMPLETE' 설정
// once_only : Default 값으로 false 설정
// minimum_plan_quality : Default 값으로 68.0 설정
// minimum_step_interval : Default 값으로 1 설정
// maximum_wait : Default 값으로 PT1M0.000S 설정
// maximum_frequency : Default 값으로 PT5.000S 설정
// allocation_type : Default 값으로 1 설정
rule "VS1_Broadcast4"
	dialect "java"
	no-loop
	when
		i : Integer(intValue() == 3)
		intglVo : IntglDataVo(vsType == ScenarioType.VS1)
		broadcast : Broadcast()
	then
		broadcast.setId(intglVo.getSourceId() + "_DB");
		broadcast.setActive(true);
		broadcast.setBroadcastTypeId("FILE");
		broadcast.setPlanType("COMPLETE");
		broadcast.setOnceOnly(false);
		broadcast.setMinimumPlanQuality(68D);
		broadcast.setMinimumStepInterval(1);
		broadcast.setMaximumWait(ConversionUtil.getIntToDuration(true, 0, 0, 1, 0)); 
		broadcast.setMaximumFrequency(ConversionUtil.getIntToDuration(true, 0, 0, 0, 5));
		broadcast.setAllocationType(1);
        update(broadcast);
end

// vstype == 6 이면
rule "VS6_Broadcast"
	dialect "java"
	no-loop
	when
		intglVo : IntglDataVo(vsType == ScenarioType.VS6)
		rulesVo : RulesVo()
		broadcast : Broadcast()
	then
		broadcast.setId(intglVo.getSourceId() + "_APP");
		broadcast.setActive(true);
		broadcast.setBroadcastTypeId("WEBSERVICE");
		broadcast.setPlanType("COMPLETE");
		broadcast.setOnceOnly(false);
		broadcast.setMinimumPlanQuality(60D);
		broadcast.setMinimumStepInterval(1);
		broadcast.setMaximumWait(ConversionUtil.getIntToDuration(true, 0, 0, 0, 1)); 
		broadcast.setMaximumFrequency(ConversionUtil.getIntToDuration(true, 0, 0, 0, 1));
		broadcast.setAllocationType(2);
		broadcast.setInputReferenceId(rulesVo.getInputReferenceId());
        update(broadcast);
end
