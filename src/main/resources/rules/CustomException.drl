//created on: 2012. 10. 15
package com.kt.oss.wmIntgl.datamapper.service.rules.mapper

import com.kt.oss.wmIntgl.common.constants.ScenarioType;
import com.kt.oss.wmIntgl.common.utils.StringUtil;
import com.kt.oss.wmIntgl.datahandler.domain.WMCustomException;
import com.kt.oss.wmIntgl.datahandler.domain.WMWorkOrderStatus;
import com.kt.oss.wmIntgl.datahandler.domain.IntglDataVo;
import com.kt.oss.wmIntgl.datamapper.service.rules.core.RulesDB;
import com._360scheduling.schema.dsscheduledata.DsScheduleData.CustomException;

// vstype == 4 이면
// id : [worktype] + [officeScode] + [workOdrNum ] 매핑
// schedule_exception_type_id : Default 값으로 1002 설정
// activity_id : [worktype] + [officeScode] + [workOdrNum ] 매핑
rule "VS4_CustomException"
	dialect "java"
	no-loop
	when
		order : WMWorkOrderStatus()
		intglVo : IntglDataVo(vsType == ScenarioType.VS4)
		customException : CustomException()
	then
		customException.setId(order.getWorkType() + order.getOfficeScode() + order.getWorkOdrNum());
		customException.setScheduleExceptionTypeId(1002);
		customException.setActivityId(order.getWorkType() + order.getOfficeScode() + order.getWorkOdrNum());
        update(customException);
end

// vstype == 7C 이면
// id : [workOdrNum ] 매핑 
// schedule_exception_type_id : Default 값으로 1001 설정
// activity_id : [workOdrNum ] 매핑
rule "VS7C_CustomException"
	dialect "java"
	no-loop
	when
		order : WMWorkOrderStatus()
		intglVo : IntglDataVo(vsType == ScenarioType.VS7C)
		customException : CustomException()
	then
		customException.setId(order.getWorkOdrNum());
		customException.setScheduleExceptionTypeId(1001);
		customException.setActivityId(order.getWorkOdrNum());
        update(customException);
end

// vstype == 90 이면
// id : if [workerId] <> '' then [workerId] + [bt360ExceptionType] 매핑 else [worktype] + [officeScode] + [workOdrNum ] + [bt360ExceptionType] 매핑 end if  
// schedule_exception_type_id : [bt360ExceptionType] 매핑
// 값 체크해서 둘중에 하나만 사용
// - activity_id : [worktype] + [officeScode] + [workOdrNum ] 매핑
// - resource_id : [workerId] 매핑
rule "VS90_CustomException"
	dialect "java"
	no-loop
	when
		order : WMCustomException()
		intglVo : IntglDataVo(vsType == ScenarioType.VS90)
		customException : CustomException()
	then
		customException.setId(StringUtil.isNotEmpty(order.getWorkerId())? order.getWorkerId() + order.getBt360ExceptionType() : order.getWorkType() + order.getOfficeScode() + order.getWorkOdrNum() + order.getBt360ExceptionType());
		customException.setScheduleExceptionTypeId(order.getBt360ExceptionType());
		customException.setActivityId(StringUtil.isNotEmpty(order.getWorkerId())? null : order.getWorkType() + order.getOfficeScode() + order.getWorkOdrNum());
		customException.setResourceId(StringUtil.isNotEmpty(order.getWorkerId())? order.getWorkerId() : null);
        update(customException);
end
