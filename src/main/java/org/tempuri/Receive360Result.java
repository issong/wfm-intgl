package org.tempuri;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.5.3
 * 2012-11-13T17:02:23.939+09:00
 * Generated source version: 2.5.3
 * 
 */
@WebServiceClient(name = "Receive360Result", 
                  wsdlLocation = "http://10.225.233.75/Ws/Wm/BT360Scheduler/BT360Process/Receive360Result.asmx?wsdl",
                  targetNamespace = "http://tempuri.org/") 
public class Receive360Result extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "Receive360Result");
    public final static QName Receive360ResultSoap = new QName("http://tempuri.org/", "Receive360ResultSoap");
    static {
        URL url = null;
        try {
            url = new URL("http://10.225.233.75/Ws/Wm/BT360Scheduler/BT360Process/Receive360Result.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Receive360Result.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://10.225.233.75/Ws/Wm/BT360Scheduler/BT360Process/Receive360Result.asmx?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Receive360Result(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Receive360Result(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Receive360Result() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns Receive360ResultSoap
     */
    @WebEndpoint(name = "Receive360ResultSoap")
    public Receive360ResultSoap getReceive360ResultSoap() {
        return super.getPort(Receive360ResultSoap, Receive360ResultSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Receive360ResultSoap
     */
    @WebEndpoint(name = "Receive360ResultSoap")
    public Receive360ResultSoap getReceive360ResultSoap(WebServiceFeature... features) {
        return super.getPort(Receive360ResultSoap, Receive360ResultSoap.class, features);
    }

}
